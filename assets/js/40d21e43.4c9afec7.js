"use strict";(self.webpackChunkbpd_reference=self.webpackChunkbpd_reference||[]).push([[6952],{7749:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>l});var n=s(4848),r=s(8453),a=s(8597);const i={sidebar_position:8},o=void 0,d={id:"for-loops/for-loops",title:"for-loops",description:"for \\ in \\:",source:"@site/docs/for-loops/for-loops.md",sourceDirName:"for-loops",slug:"/for-loops/",permalink:"/bpd-reference/docs/for-loops/",draft:!1,unlisted:!1,editUrl:"https://github.com/dsc-courses/bpd-reference/tree/main/docs/for-loops/for-loops.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Line Plot",permalink:"/bpd-reference/docs/plotting/Line Plot"},next:{title:"if-statements",permalink:"/bpd-reference/docs/category/if-statements"}},c={},l=[];function p(e){const t={code:"code",hr:"hr",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:[(0,n.jsxs)("code",{children:["for <loop variable> in <sequence>: ",(0,n.jsx)("br",{})," "]}),"\n\xa0\xa0\xa0\xa0\xa0\xa0 ",(0,n.jsx)("code",{children:" <loop body> "})]}),"\n",(0,n.jsxs)("div",{className:"base",children:[(0,n.jsx)("p",{children:(0,n.jsx)("strong",{children:"Performs the loop body for every element of the sequence."})}),(0,n.jsxs)("dl",{children:[(0,n.jsx)("dt",{className:"term",children:"Components:"}),(0,n.jsxs)("dd",{className:"parameter",children:["loop variable : ",(0,n.jsx)("em",{children:"variable"})]}),(0,n.jsx)("dd",{className:"parameter-description",children:"Variable that will take on the value of every element in the\nsequence at some point in the loop. Any valid variable is acceptable."}),(0,n.jsxs)("dd",{className:"parameter",children:["sequence : ",(0,n.jsx)("em",{children:"iterable object"})]}),(0,n.jsx)("dd",{className:"parameter-description",children:"e.g. Arrays, Lists, Strings"}),(0,n.jsxs)("dd",{className:"parameter",children:["loop body : ",(0,n.jsx)("em",{})]}),(0,n.jsx)("dd",{className:"parameter-description",children:"Code to be executed for every element in sequence. "}),(0,n.jsx)("dt",{className:"term",children:"Results:"}),(0,n.jsx)("dd",{children:"Output of loop body"})]})]}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"pets\n"})}),"\n",(0,n.jsx)(a.A,{data:'{"columns":["ID","Species","Age","Weight"],"index":[0,1,2,3,4,5,6,7],"data":[["dog_001","dog",5.0,40.0],["cat_001","cat",0.2,1.5],["cat_002","cat",9.0,15.0],["dog_002","dog",2.0,80.0],["dog_003","dog",0.5,25.0],["ham_001","hamster",3.0,1.0],["ham_002","hamster",0.2,0.25],["cat_003","cat",0.0,10.0]]}'}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"for i in np.arange(pets.shape[0]):\n    chosen_pet = pets.iloc[i]\n    pet_id = chosen_pet.get('ID')\n    species = chosen_pet.get('Species')\n    age = chosen_pet.get('Age')\n    weight = chosen_pet.get('Weight')\n    print(\"This is a \" + species + \" with pet id \" + str(pet_id) +', age ' + str(age) +', and weight '+str(weight))\n"})}),"\n",(0,n.jsxs)(t.p,{children:["This is a dog with pet id dog_001, age 5.0, and weight 40.0 ",(0,n.jsx)("br",{}),"\nThis is a cat with pet id cat_001, age 0.2, and weight 1.5 ",(0,n.jsx)("br",{}),"\nThis is a cat with pet id cat_002, age 9.0, and weight 15.0 ",(0,n.jsx)("br",{}),"\nThis is a dog with pet id dog_002, age 2.0, and weight 80.0 ",(0,n.jsx)("br",{}),"\nThis is a dog with pet id dog_003, age 0.5, and weight 25.0 ",(0,n.jsx)("br",{}),"\nThis is a hamster with pet id ham_001, age 3.0, and weight 1.0 ",(0,n.jsx)("br",{}),"\nThis is a hamster with pet id ham_002, age 0.2, and weight 0.25 ",(0,n.jsx)("br",{}),"\nThis is a cat with pet id cat_003, age 0.0, and weight 10.0"]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},8597:(e,t,s)=>{s.d(t,{A:()=>r});s(6540);var n=s(4848);const r=e=>{let{data:t}=e,s=[],r=[],a="",i=[];if(t){const e=JSON.parse(t);s=e.columns||[],r=e.data||[],a=e.indexName||"Index",i=e.index||[]}return(0,n.jsx)("div",{className:"dataframe-container",children:(0,n.jsxs)("table",{className:"dataframe-table",children:[(0,n.jsx)("thead",{children:(0,n.jsxs)("tr",{children:[(0,n.jsx)("th",{children:a})," ",s.map(((e,t)=>(0,n.jsx)("th",{children:e},t)))]})}),(0,n.jsx)("tbody",{children:r.map(((e,t)=>(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{className:"index-value",children:i[t]})," ",e.map(((e,t)=>(0,n.jsx)("td",{children:"boolean"==typeof e?e.toString().charAt(0).toUpperCase()+e.toString().slice(1):e},t)))]},t)))})]})})}},8453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>o});var n=s(6540);const r={},a=n.createContext(r);function i(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);