"use strict";(self.webpackChunkbpd_reference=self.webpackChunkbpd_reference||[]).push([[6157],{8593:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>d,metadata:()=>i,toc:()=>l});var t=n(4848),a=n(8453),r=n(8597);const d={sidebar_position:1},c=void 0,i={id:"accessing-data/df.shape",title:"df.shape",description:"df.shape",source:"@site/docs/accessing-data/df.shape.md",sourceDirName:"accessing-data",slug:"/accessing-data/df.shape",permalink:"/bpd-reference/docs/accessing-data/df.shape",draft:!1,unlisted:!1,editUrl:"https://github.com/dsc-courses/bpd-reference/tree/main/docs/accessing-data/df.shape.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Accessing Data",permalink:"/bpd-reference/docs/category/accessing-data"},next:{title:"Series Methods",permalink:"/bpd-reference/docs/series-methods/"}},o={},l=[];function h(e){const s={code:"code",hr:"hr",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("code",{children:"df.shape"}),"\n",(0,t.jsxs)("div",{className:"base",children:[(0,t.jsx)("p",{children:(0,t.jsx)("strong",{children:"Return a tuple representing the dimensionality of the DataFrame."})}),(0,t.jsxs)("dl",{children:[(0,t.jsx)("dt",{className:"term",children:"Returns:"}),(0,t.jsx)("dd",{children:"a tuple representing the dimensionality of the DataFrame."}),(0,t.jsx)("dt",{className:"term",children:"Return Type:"}),(0,t.jsx)("dd",{children:"Tuple"}),(0,t.jsx)("dt",{className:"term",children:"Note:"}),(0,t.jsxs)("dd",{children:[(0,t.jsx)(s.code,{children:"df.shape[0]"})," returns the number of ",(0,t.jsx)("strong",{children:"observations (rows)"})," in the DataFrame."]}),(0,t.jsxs)("dd",{children:[(0,t.jsx)(s.code,{children:"df.shape[1]"})," returns the number of ",(0,t.jsx)("strong",{children:"variables (columns)"})," in the DataFrame."]})]})]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:"pets\n"})}),"\n",(0,t.jsx)(r.A,{data:'{"columns":["Species","Color","Weight","Age"],"index":[0,1,2,3,4,5,6],"data":[["dog","black",40.0,5.0],["cat","golden",15.0,8.0],["cat","black",20.0,9.0],["dog","white",80.0,2.0],["dog","black",25.0,0.5],["hamster","black",1.0,3.0],["hamster","golden",0.25,0.2]]}'}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:"pets.shape\n"})}),"\n",(0,t.jsx)(s.p,{children:"(7, 4)"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:"pets.shape[0]\n"})}),"\n",(0,t.jsx)(s.p,{children:"7"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:"pets.shape[1]\n"})}),"\n",(0,t.jsx)(s.p,{children:"4"})]})}function p(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8597:(e,s,n)=>{n.d(s,{A:()=>a});n(6540);var t=n(4848);const a=e=>{let{data:s}=e,n=[],a=[],r="",d=[];if(s){const e=JSON.parse(s);n=e.columns||[],a=e.data||[],r=e.indexName||"Index",d=e.index||[]}return(0,t.jsx)("div",{className:"dataframe-container",children:(0,t.jsxs)("table",{className:"dataframe-table",children:[(0,t.jsx)("thead",{children:(0,t.jsxs)("tr",{children:[(0,t.jsx)("th",{children:r})," ",n.map(((e,s)=>(0,t.jsx)("th",{children:e},s)))]})}),(0,t.jsx)("tbody",{children:a.map(((e,s)=>(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{className:"index-value",children:d[s]})," ",e.map(((e,s)=>(0,t.jsx)("td",{children:"boolean"==typeof e?e.toString().charAt(0).toUpperCase()+e.toString().slice(1):e},s)))]},s)))})]})})}},8453:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>c});var t=n(6540);const a={},r=t.createContext(a);function d(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);