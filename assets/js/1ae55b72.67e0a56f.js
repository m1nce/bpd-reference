"use strict";(self.webpackChunkbpd_reference=self.webpackChunkbpd_reference||[]).push([[709],{7321:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>d,metadata:()=>i,toc:()=>c});var a=t(4848),s=t(8453),r=t(8597);const d={sidebar_position:6},o=void 0,i={id:"building-organizing/df.reset_index()",title:"df.reset_index()",description:"df.reset_index(drop=False)",source:"@site/docs/building-organizing/df.reset_index().md",sourceDirName:"building-organizing",slug:"/building-organizing/df.reset_index()",permalink:"/bpd-reference/docs/building-organizing/df.reset_index()",draft:!1,unlisted:!1,editUrl:"https://github.com/dsc-courses/bpd-reference/tree/main/docs/building-organizing/df.reset_index().md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"df.set_index()",permalink:"/bpd-reference/docs/building-organizing/df.set_index()"},next:{title:"df.sort_values()",permalink:"/bpd-reference/docs/building-organizing/df.sort_values()"}},l={},c=[];function h(e){const n={code:"code",hr:"hr",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("code",{children:"df.reset_index(drop=False)"}),"\n",(0,a.jsxs)("div",{className:"base",children:[(0,a.jsx)("p",{children:(0,a.jsx)("strong",{children:"Moves the index to a column."})}),(0,a.jsxs)("dl",{children:[(0,a.jsx)("dt",{className:"term",children:"Input:"}),(0,a.jsxs)("dd",{className:"parameter",children:["drop : ",(0,a.jsx)("em",{children:"boolean, default False"})]}),(0,a.jsx)("dd",{className:"parameter-description",children:"If False, adds index as a column to the DataFrame. If True, doesn't add index into the DataFrame."}),(0,a.jsx)("dt",{className:"term",children:"Returns:"}),(0,a.jsx)("dd",{children:"df_without_idx - A new DataFrame with or without the column set as the index"}),(0,a.jsx)("dt",{className:"term",children:"Return Type:"}),(0,a.jsx)("dd",{children:"DataFrame"})]})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"pets = pets.set_index('ID')\npets\n"})}),"\n",(0,a.jsx)(r.A,{data:'{"columns":["Species","Color","Weight","Age","Is_Cat","Owner_Comment"],"index":["dog_001","cat_001","cat_002","dog_002","dog_003","ham_001","ham_002","cat_003"],"data":[["dog","black",40.0,5.0,false,"      There are no bad dogs, only bad owners."],["cat","golden",1.5,0.2,true,"My best birthday present ever!!!"],["cat","black",15.0,9.0,true,"****All you need is love and a cat.****"],["dog","white",80.0,2.0,false,"Love is a wet nose and a wagging tail."],["dog","black",25.0,0.5,false,"Be the person your dog thinks you are."],["hamster","black",1.0,3.0,false,"No, thank you!"],["hamster","golden",0.25,0.2,false,"No, thank you!"],["cat","black",10.0,0.0,true,"No, thank you!"]]}'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"pets.reset_index()\n"})}),"\n",(0,a.jsx)(r.A,{data:'{"columns":["ID","Species","Color","Weight","Age","Is_Cat","Owner_Comment"],"index":[0,1,2,3,4,5,6,7],"data":[["dog_001","dog","black",40.0,5.0,false,"      There are no bad dogs, only bad owners."],["cat_001","cat","golden",1.5,0.2,true,"My best birthday present ever!!!"],["cat_002","cat","black",15.0,9.0,true,"****All you need is love and a cat.****"],["dog_002","dog","white",80.0,2.0,false,"Love is a wet nose and a wagging tail."],["dog_003","dog","black",25.0,0.5,false,"Be the person your dog thinks you are."],["ham_001","hamster","black",1.0,3.0,false,"No, thank you!"],["ham_002","hamster","golden",0.25,0.2,false,"No, thank you!"],["cat_003","cat","black",10.0,0.0,true,"No, thank you!"]]}'}),"\n",(0,a.jsxs)("p",{children:[(0,a.jsx)("br",{})," ",(0,a.jsxs)(n.strong,{children:["Note that when ",(0,a.jsx)(n.code,{children:"drop=True"}),", the previous index will be dropped instead of becoming a new column in the DataFrame."]})," "]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"pets.reset_index(drop=True)\n"})}),"\n",(0,a.jsx)(r.A,{data:'{"columns":["Species","Color","Weight","Age","Is_Cat","Owner_Comment"],"index":[0,1,2,3,4,5,6,7],"data":[["dog","black",40.0,5.0,false,"      There are no bad dogs, only bad owners."],["cat","golden",1.5,0.2,true,"My best birthday present ever!!!"],["cat","black",15.0,9.0,true,"****All you need is love and a cat.****"],["dog","white",80.0,2.0,false,"Love is a wet nose and a wagging tail."],["dog","black",25.0,0.5,false,"Be the person your dog thinks you are."],["hamster","black",1.0,3.0,false,"No, thank you!"],["hamster","golden",0.25,0.2,false,"No, thank you!"],["cat","black",10.0,0.0,true,"No, thank you!"]]}'})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},8597:(e,n,t)=>{t.d(n,{A:()=>s});t(6540);var a=t(4848);const s=e=>{let{data:n}=e,t=[],s=[],r="",d=[];if(n){const e=JSON.parse(n);t=e.columns||[],s=e.data||[],r=e.indexName||"Index",d=e.index||[]}return(0,a.jsx)("div",{className:"dataframe-container",children:(0,a.jsxs)("table",{className:"dataframe-table",children:[(0,a.jsx)("thead",{children:(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{children:r})," ",t.map(((e,n)=>(0,a.jsx)("th",{children:e},n)))]})}),(0,a.jsx)("tbody",{children:s.map(((e,n)=>(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{className:"index-value",children:d[n]})," ",e.map(((e,n)=>(0,a.jsx)("td",{children:"boolean"==typeof e?e.toString().charAt(0).toUpperCase()+e.toString().slice(1):e},n)))]},n)))})]})})}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>o});var a=t(6540);const s={},r=a.createContext(s);function d(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);