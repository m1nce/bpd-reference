"use strict";(self.webpackChunkbpd_reference=self.webpackChunkbpd_reference||[]).push([[8938],{9345:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>l});var n=s(4848),t=s(8453),a=s(8205);const c={sidebar_position:1},o=void 0,i={id:"data format conversion/np.array",title:"np.array",description:"np.array(input)",source:"@site/docs/data format conversion/np.array.md",sourceDirName:"data format conversion",slug:"/data format conversion/np.array",permalink:"/bpd-reference/docs/data format conversion/np.array",draft:!1,unlisted:!1,editUrl:"https://github.com/dsc-courses/bpd-reference/tree/main/docs/data format conversion/np.array.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Data Format Conversion",permalink:"/bpd-reference/docs/category/data-format-conversion"},next:{title:"list()",permalink:"/bpd-reference/docs/data format conversion/list()"}},d={},l=[];function p(e){const r={code:"code",hr:"hr",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("code",{children:"np.array(input)"}),"\n",(0,n.jsxs)("div",{className:"base",children:[(0,n.jsx)("p",{children:(0,n.jsx)("strong",{children:"Casts an iterable into a list (bpd.Series, df.columns, and list)"})}),(0,n.jsxs)("dl",{children:[(0,n.jsx)("dt",{className:"term",children:"Input:"}),(0,n.jsxs)("dd",{className:"parameter",children:["input : ",(0,n.jsx)("em",{children:"ser, .columns, list"})]}),(0,n.jsx)("dd",{className:"parameter-description",children:"Name of series/.columns/list to cast to an array."}),(0,n.jsx)("dt",{className:"term",children:"Returns:"}),(0,n.jsx)("dd",{children:"df_with_cols - Same input, casted to an array. "}),(0,n.jsx)("dt",{className:"term",children:"Return Type:"}),(0,n.jsx)("dd",{children:"Array"})]})]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)("p",{children:(0,n.jsx)("strong",{children:"Series to Array"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:"weight_ser = pets.get('Weight')\nweight_ser\n"})}),"\n",(0,n.jsx)(a.A,{data:'{"name":"Weight", "dtype": "float64", "index":[0,1,2,3,4,5,6,7],"data":[40.0,1.5,15.0,80.0,25.0,1.0,0.25,10.0]}'}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:"weight_arr = np.array(weight_ser)\nweight_arr\n"})}),"\n",(0,n.jsx)(r.p,{children:"array([40. , 15. , 20. , 80. , 25. , 1. , 0.25])"}),"\n",(0,n.jsx)("p",{children:(0,n.jsx)("strong",{children:".columns to Array"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:"pets_cols = pets.columns\npet_cols\n"})}),"\n",(0,n.jsx)(r.p,{children:"Index(['ID', 'Species', 'Color', 'Weight', 'Age', 'Is_Cat', 'Owner_Comment'], dtype='object')"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:"pets_cols_arr = np.array(pets.columns)\npet_cols_arr\n"})}),"\n",(0,n.jsx)(r.p,{children:"array(['ID', 'Species', 'Color', 'Weight', 'Age', 'Is_Cat',\n'Owner_Comment'], dtype=object)"}),"\n",(0,n.jsx)("p",{children:(0,n.jsx)("strong",{children:"List to Array"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'pets_list = ["dog", "cat", "hamster", "cat", "cat", "dog", "dog", "hamster", "hamster"]\npet_list\n'})}),"\n",(0,n.jsx)(r.p,{children:'["dog", "cat", "hamster", "cat", "cat", "dog", "dog", "hamster", "hamster"]'}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:"pets_list_arr = np.array(pets_list)\npet_list_arr\n"})}),"\n",(0,n.jsx)(r.p,{children:'array(["dog", "cat", "hamster", "cat", "cat", "dog", "dog", "hamster", "hamster"], dtype=object)'})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},8205:(e,r,s)=>{s.d(r,{A:()=>t});s(6540);var n=s(4848);const t=e=>{let{data:r}=e,s=[],t=[],a="",c="";if(r)try{const e=JSON.parse(r);a=e.name||"",c=e.dtype||"Unknown type",s=e.index||[],t=e.data||[]}catch(i){console.error("Error parsing data prop in SeriesComponent:",i)}const o=t.map((e=>JSON.stringify(e)));return(0,n.jsxs)("div",{className:"series-container",children:[(0,n.jsx)("ul",{className:"series-list",children:o.map(((e,r)=>(0,n.jsxs)("li",{className:"series-item",children:[(0,n.jsx)("span",{className:"series-index",children:s[r]}),(0,n.jsx)("span",{className:"series-value",children:"true"===e||"false"===e?e.charAt(0).toUpperCase()+e.slice(1):e})]},r)))}),(0,n.jsxs)("div",{className:"series-footer",children:["Name: ",a,", dtype: ",c]})]})}},8453:(e,r,s)=>{s.d(r,{R:()=>c,x:()=>o});var n=s(6540);const t={},a=n.createContext(t);function c(e){const r=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),n.createElement(a.Provider,{value:r},e.children)}}}]);