"use strict";(self.webpackChunkbpd_reference=self.webpackChunkbpd_reference||[]).push([[5007],{4157:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>o});var i=s(4848),c=s(8453);const t={title:"Accessing Data"},d=void 0,r={id:"documentation/accessing-data/index",title:"Accessing Data",description:"df.shape",source:"@site/docs/documentation/accessing-data/index.md",sourceDirName:"documentation/accessing-data",slug:"/documentation/accessing-data/",permalink:"/bpd-reference/docs/documentation/accessing-data/",draft:!1,unlisted:!1,editUrl:"https://github.com/dsc-courses/bpd-reference/tree/main/docs/documentation/accessing-data/index.md",tags:[],version:"current",frontMatter:{title:"Accessing Data"},sidebar:"docsSidebar",previous:{title:"df.merge()",permalink:"/bpd-reference/docs/documentation/building-organizing/df.merge()"},next:{title:"df.shape",permalink:"/bpd-reference/docs/documentation/accessing-data/df.shape"}},a={},o=[];function l(e){const n={a:"a",p:"p",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("p",{className:"main-description"}),"\n",(0,i.jsxs)("div",{className:"method-container",children:[(0,i.jsx)("div",{className:"method",children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"df.shape",children:(0,i.jsx)("code",{children:"df.shape"})})})}),(0,i.jsx)("div",{className:"description",children:(0,i.jsx)("p",{children:"Return a tuple representing the dimensionality of the DataFrame."})})]}),"\n",(0,i.jsxs)("div",{className:"method-container",children:[(0,i.jsx)("div",{className:"method",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"df.get()",children:(0,i.jsx)("code",{children:"df.get"})}),"(column_name)"]})}),(0,i.jsx)("div",{className:"description",children:(0,i.jsx)("p",{children:"Return column(s) from DataFrame."})})]}),"\n",(0,i.jsxs)("div",{className:"method-container",children:[(0,i.jsx)("div",{className:"method",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"ser.loc%5B%5D",children:(0,i.jsx)("code",{children:"ser.loc"})}),"[]"]})}),(0,i.jsx)("div",{className:"description",children:(0,i.jsx)("p",{children:"Return element of Series that corresponds to its row label."})})]}),"\n",(0,i.jsxs)("div",{className:"method-container",children:[(0,i.jsx)("div",{className:"method",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"ser.iloc%5B%5D",children:(0,i.jsx)("code",{children:"ser.iloc"})}),"[]"]})}),(0,i.jsx)("div",{className:"description",children:(0,i.jsx)("p",{children:"Returns element contained in Series at the given position."})})]}),"\n",(0,i.jsxs)("div",{className:"method-container",children:[(0,i.jsx)("div",{className:"method",children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"df.index",children:(0,i.jsx)("code",{children:"df.index"})})})}),(0,i.jsx)("div",{className:"description",children:(0,i.jsx)("p",{children:'Returns an "array" containing the indices of the DataFrame.'})})]}),"\n",(0,i.jsxs)("div",{className:"method-container",children:[(0,i.jsx)("div",{className:"method",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"df.take()",children:(0,i.jsx)("code",{children:"df.take"})}),"(indices)"]})}),(0,i.jsx)("div",{className:"description",children:(0,i.jsx)("p",{children:"Return the elements in the given positional indices."})})]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>r});var i=s(6540);const c={},t=i.createContext(c);function d(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:d(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);